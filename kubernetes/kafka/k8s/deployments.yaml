apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:latest
        ports:
        - containerPort: 2181
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: zookeeper-config

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broker
  template:
    metadata:
      labels:
        app: broker
    spec:
      containers:
      - name: broker
        image: confluentinc/cp-server:latest
        ports:
        - containerPort: 29092
        - containerPort: 29093
        - containerPort: 9092
        - containerPort: 9101
        resources:
          requests:
             memory: "64Mi"
             cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: broker-config
        volumeMounts:
        - name: kafka-storage
          mountPath: /tmp/kraft-combined-logs
      volumes:
      - name: kafka-storage
        persistentVolumeClaim:
          claimName: kafka-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: connect
  template:
    metadata:
      labels:
        app: connect
    spec:
      containers:
      - name: connect
        image: cnfldemos/cp-server-connect-datagen:0.6.4-7.6.0
        ports:
        - containerPort: 8083
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: connect-config
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: control-center
spec:
  replicas: 1
  selector:
    matchLabels:
      app: control-center
  template:
    metadata:
      labels:
        app: control-center
    spec:
      containers:
      - name: control-center
        image: confluentinc/cp-enterprise-control-center:latest
        ports:
        - containerPort: 9021
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: control-center-config

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksql-datagen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ksql-datagen
  template:
    metadata:
      labels:
        app: ksql-datagen
    spec:
      containers:
      - name: ksql-datagen
        image: confluentinc/ksqldb-examples:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        command: ["bash", "-c", "echo Waiting for Kafka to be ready... && cub kafka-ready -b broker:29092 1 40 && echo Waiting for Confluent Schema Registry to be ready... && cub sr-ready schema-registry 8081 40 && echo Waiting a few seconds for topic creation to finish... && sleep 11 && tail -f /dev/null"]
        envFrom:
        - configMapRef:
            name: ksql-datagen-config

---

# ksqldb-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksqldb-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ksqldb-server
  template:
    metadata:
      labels:
        app: ksqldb-server
    spec:
      containers:
      - name: ksqldb-server
        image: confluentinc/cp-ksqldb-server:latest
        ports:
        - containerPort: 8088
        resources:
          requests:
             memory: "64Mi"
             cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: ksqldb-config
        volumeMounts:
        - name: ksqldb-storage
          mountPath: /var/lib/ksqldb
      volumes:
      - name: ksqldb-storage
        persistentVolumeClaim:
          claimName: ksqldb-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rest-proxy
  template:
    metadata:
      labels:
        app: rest-proxy
    spec:
      containers:
      - name: rest-proxy
        image: confluentinc/cp-kafka-rest:latest
        ports:
        - containerPort: 8082
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: rest-proxy-config
        
---

# schema-registry-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      containers:
      - name: schema-registry
        image: confluentinc/cp-schema-registry:latest
        ports:
        - containerPort: 8081
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: schema-registry-config
---


